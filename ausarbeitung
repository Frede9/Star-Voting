3.5
Nach dem Parsen der XML-Dateien folgt nun die erste Auswertung der Votes.
In der ersten Auswertung werden die gesamten Votes der Voter für jeden einzelnen Kandidaten summiert, sodass am Ende eine Liste entsteht, die alle Kandidaten und deren Gesamtbewertung enthält. Dafür werden die Votes am Anfang gefiltert und anschließend ausgewertet.
3.5.1 Filtern der Votes
In der Funktion getListOfVoters werden, unter anderem für das spätere Runoff, zunächst die Voter mit ihren Votes gefiltert, die nur reguläre Votes abgegeben haben. Dafür sind die Liste der Voter und der Kandidaten als Parameter übergeben, um dann die gefilterte Liste der Voter zurückzugeben. Durch die Funktion checkVotes werden die Votes eines Voters überprüft und entsprechend je nach Ergebnis an die Ausgabeliste drangehangen. 

3.5.2 Auswerten der Votes
Nach dem Filtern der Votes müssen diese nun ausgewertet werden. Eine Map verwaltet die einzelnen Kandidaten und deren Ergebnisse. Die Methode getResults besitzt also einen Parameter mit den einzelnen Votern und einer Map. Als Ergebnis entsteht eine Liste von Tupeln mit den Kandidaten und deren Ergebnis.
Über die Funktion insertVotes werden die Votes eines Voters der Map hinzugefügt. Durch die Methode Map.insertWith (+) werden die Kandidaten als Key geupdatet und die entsprechende Bewertung hinzugerechnet. Wenn alle Votes eines Votes durchgegangen worden, werden in der Funktion getResults die nächsten Votes eines Voters übergeben.
Abschließend, falls die Liste der Voter leer ist, wird die Map in eine Liste umgewandelt.
